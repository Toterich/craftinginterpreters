program        -> statement* EOF;
statement      -> exprStmt | ifStmt | printStmt | varDeclStmt | blockStmt ;
ifStmt         -> "if" "(" expression ")" statement ("else" statement)? ;
blockStmt      -> "{" statement* "}";
varDeclStmt    -> "var" IDENTIFIER ("=" expression)? ";";
printStmt      -> "print" expression ";"
exprStmt       -> expression ";"
expression     -> comma_op
comma_op       -> assignment ("," assignment)* ;
assignment     -> IDENTIFIER "=" assignment | logic_or;
logic_or       -> logic_and ("or" logic_and)* ;
logic_and      -> equality ("and" equality)* ;
equality       -> comparison ( ( "!=" | "==" ) comparison )* ;
comparison     -> term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term           -> factor ( ( "-" | "+" ) factor )* ;
factor         -> unary ( ( "/" | "*" ) unary )* ;
unary          -> ( "!" | "-" ) unary
               | primary ;
primary        -> NUMBER | STRING | IDENTIFIER | "true" | "false" | "nil"
               | "(" expression ")" ;